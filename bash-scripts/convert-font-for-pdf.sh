#!/usr/bin/env bash
# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ: –≤—ã–±—Ä–∞—Ç—å PDF –∏ —à—Ä–∏—Ñ—Ç; —Å–æ–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π PDF c –ø–æ—Å—Ç—Ñ–∏–∫—Å–æ–º _<font>
# –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: poppler (pdftotext), pandoc, texlive-core, texlive-fontsextra, fzf

set -euo pipefail

err()  { printf "\e[31m%s\e[0m\n" "$*" >&2; }
info() { printf "\e[36m%s\e[0m\n" "$*"; }

need_cmds=(pdftotext pandoc xelatex fc-list fzf)
missing=()
for c in "${need_cmds[@]}"; do command -v "$c" >/dev/null 2>&1 || missing+=("$c"); done
if (( ${#missing[@]} )); then
  err "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: ${missing[*]}"
  echo "–£—Å—Ç–∞–Ω–æ–≤–∏ (Arch): sudo pacman -S poppler pandoc texlive-core texlive-fontsextra fzf"
  exit 1
fi

pick_pdf() {
  local sel
  sel="$(find . -type f -iname '*.pdf' | sed 's|^\./||' | fzf --prompt='PDF > ' --height=80% --reverse)"
  [[ -n "${sel:-}" ]] || { err "–û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞ PDF"; exit 1; }
  printf '%s\n' "$sel"
}

list_families_unique() {
  fc-list : family \
    | tr ',' '\n' \
    | sed 's/^[[:space:]]\+//; s/[[:space:]]\+$//' \
    | awk 'BEGIN{IGNORECASE=1} !seen[tolower($0)]++ && length($0)>0' \
    | sort -f
}

pick_font() {
  local sel
  sel="$(list_families_unique | fzf --prompt='Font > ' --height=80% --reverse --query='Inter')"
  [[ -n "${sel:-}" ]] || { err "–û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞"; exit 1; }
  printf '%s\n' "$sel"
}

sanitize() {
  printf '%s' "$1" | sed -e 's/[[:space:]]\+/_/g' -e 's/[^A-Za-z0-9._+-]/_/g'
}

build_pdf() {
  local input="$1" font="$2" output="$3"
  local tmp_txt
  tmp_txt="$(mktemp)"
  trap 'rm -f "$tmp_txt"' EXIT

  info "üìú –ò–∑–≤–ª–µ–∫–∞—é —Ç–µ–∫—Å—Ç: $input"
  pdftotext "$input" "$tmp_txt"

  info "üõ† –°–æ–±–∏—Ä–∞—é PDF —Å–æ —à—Ä–∏—Ñ—Ç–æ–º: $font"
  pandoc "$tmp_txt" \
    -V mainfont="$font" \
    -V fontsize=11pt \
    -V geometry:"a4paper,margin=2cm" \
    --pdf-engine=xelatex \
    -o "$output"

  info "‚úÖ –ì–æ—Ç–æ–≤–æ: $output"
}

main() {
  local input font output in_dir in_base base_no_ext font_safe
  input="$(pick_pdf)"
  [[ -f "$input" ]] || { err "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $input"; exit 1; }

  font="$(pick_font)"
  if ! fc-list | grep -qi --fixed-strings "$font"; then
    err "–®—Ä–∏—Ñ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ: $font"
    exit 1
  fi

  in_dir="$(dirname -- "$input")"
  in_base="$(basename -- "$input")"
  base_no_ext="${in_base%.*}"
  font_safe="$(sanitize "$font")"
  output="${in_dir}/${base_no_ext}_${font_safe}.pdf"

  build_pdf "$input" "$font" "$output"
}

main
