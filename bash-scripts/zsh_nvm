function setNpmrc(){
  if [ ! -f .npmrc ]; then
    touch .npmrc
    echo "engine-strict=true" > .npmrc
  fi
}

setNpmrc

function getNodeVersionFromPackageJson(){
  if [ -f package.json ]; then
    node_version=$(jq -r '.engines.node' package.json)
    if [ -z "$node_version" ]; then
      echo "${tred}package.json has no node string${treset}"
      exit 1
    fi
    new=$(echo $node_version | sed 's/[^0-9.]//g')
    echo $new
  else
    # echo "package.json not found"
    exit 1
  fi
}

autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  node_package=$(getNodeVersionFromPackageJson)
  echo "node_version: $node_version"
  echo "node_package: $node_package"
  if [ "$node_version" != "$node_package" ]; then
    # check if node version is installed
    nvm install $node_package
    nvm use $node_package
  fi
}

if [ -f package.json ]; then
  add-zsh-hook chpwd load-nvmrc
  load-nvmrc
fi
